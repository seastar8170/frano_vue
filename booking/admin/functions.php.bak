<?php

    $datetimeFormat = 'd.m.Y H:i';
    $today = new \DateTime('today', new \DateTimeZone('Europe/Zagreb'));

    $post_vars = array();

    if ( $_POST ) {

        $post_vars = $_POST;

    }

    $get_vars = array();

    if ( $_GET ) {

        $get_vars = $_GET;

    }

    $conn = new mysqli($servername, $username, $password, $database);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    $cancel_id = 0;

    if ( isset($_GET['cancel']) ) {

        $cancel_id = $_GET['cancel'];

    }

    // DELETE IF THERE IS ANYTHING TO DELETE

    $cancel_success = false;

    if( $cancel_id ) {

        $sql = "UPDATE tours SET active = 0 WHERE id = " . $cancel_id;

        if ( $conn->query($sql) === TRUE ) {

            $cancel_success = true;

        }

    }

    $activate_id = 0;

    if ( isset($_GET['activate']) ) {

        $activate_id = $_GET['activate'];

    }

    // ACTIVATE IF THERE IS ANYTHING TO ACTIVATE

    $activate_success = false;

    if( $activate_id ) {

        $sql = "UPDATE tours SET active = 1 WHERE id = " . $activate_id;

        if ( $conn->query($sql) === TRUE ) {

            $activate_success = true;

        }

    }

    // INSERT IF THERE IS ANYTHING TO INSERT


    $insert_success = false;

    /*if( isset($post_vars['method']) && $post_vars['method'] == 'insert' ) {

        $sql = "
            INSERT
            INTO bundle_tool
            (
                id,
                bundle_name,
                bundle_sku,
                product_sku,
                quantity,
                price,
                shop
            )
            VALUES
            (
                NULL,
                '" . $post_vars['bundleName'] . "',
                '" . $post_vars['bundleSku'] . "',
                '" . implode(',', array_filter($post_vars['productSku'])) . "',
                '" . implode(',', array_filter($post_vars['qty'])) . "',
                '" . implode(',', array_filter($post_vars['price'])) . "',
                '" . $active_site . "'
            );";

        if ( $conn->query($sql) === TRUE ) {

            $insert_success = true;

        }

    } elseif( isset($post_vars['method']) && $post_vars['method'] == 'update' ) {*/
    if( isset($post_vars['method']) && $post_vars['method'] == 'update' ) {

        $datetime_str = $post_vars['date'] . ' ' . $post_vars['time'];
        $datetime = new \DateTime($datetime_str, new \DateTimeZone('Europe/Zagreb'));

        $sql = "
            UPDATE tours
            SET
                capacity = '" . $post_vars['capacity'] . "',
                price = '" . $post_vars['price'] . "',
                manually_blocked_capacity = '" . $post_vars['manualy_blocked_capacity'] . "',
                timestamp = '" . $datetime->format('U') . "'
            WHERE
                id = " . $post_vars['id'];

        // echo $sql;

        if ( $conn->query($sql) === TRUE ) {

            $insert_success = true;

        }

    }

    // SELECT FOR EDIT OR TABLE VIEW SCREEN

    if( isset($page_config['is_edit']) && $page_config['is_edit'] ) {

        // $get_single_row = "SELECT * FROM bundle_tool WHERE id = '" . $_GET['id'] . "' LIMIT 1";
        $get_single_row = "SELECT * FROM tours WHERE id = '" . $_GET['id'] . "' LIMIT 1";

        if ($result = $conn->query( $get_single_row )) {

            $tour = $result->fetch_assoc();

        }

    } else {

        $search = array(
            'is_search' => false,
            'tour_name' => '',
            'pickup_point' => '',
            'date' => '',
        );

        if( isset($get_vars['search']) && $get_vars['search'] == '1' ) {

            $search['is_search'] = true;

            $search = array(
                'is_search' => true,
                'tour_name' => $get_vars['tour_name'] ? trim($get_vars['tour_name']) : '',
                'pickup_point' => $get_vars['pickup_point'] ? trim($get_vars['pickup_point']) : '',
                'date' => $get_vars['date'] ? trim($get_vars['date']) : '',
            );

            $where = '';

            if($search['tour_name']) {
                $where = " tour_name LIKE '" . $search['tour_name'] . "'";
            }

            if($search['pickup_point']) {
                if($where != '') {
                    $where .= " AND";
                }
                $where .= " pickup_point LIKE '" . $search['pickup_point'] . "'";
            }

            if($search['date']) {

                $date_obj = DateTime::createFromFormat('d.m.Y', $search['date']);
                $search_date = $date_obj->format('Y-m-d');

                if($where != '') {
                    $where .= " AND";
                }
                $where .= " date LIKE '" . $search_date . "'";
            }

            if($where == '') {
                $where = '1 = 1';
            }

            $get_rows_query = "SELECT * FROM tours WHERE " . $where . " ORDER BY timestamp LIMIT 100";

        } else {

            $get_rows_query = "SELECT * FROM tours WHERE timestamp >= " . $today->format('U') . " ORDER BY timestamp LIMIT 100";

        }

        $all_tours = array();

        if ($result = $conn->query( $get_rows_query )) {

            while($row = $result->fetch_assoc()) {

                $all_tours[] = $row;

            }
        }
    }

    $conn->close();
